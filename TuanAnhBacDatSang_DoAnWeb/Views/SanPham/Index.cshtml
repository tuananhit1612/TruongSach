@model IEnumerable<TuanAnhBacDatSang_DoAnWeb.ViewModels.SanPhamViewModel>
@{
    ViewData["Title"] = "Cửa Hàng";
}

<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">

<style>
    :root {
        --shop-primary: #2d5a27;
        --shop-secondary: #6fbb6b;
        --shop-accent: #ff6b35;
        --shop-success: #28a745;
        --shop-warning: #ffc107;
        --shop-danger: #dc3545;
        --shop-dark: #1e293b;
        --shop-light: #f8fafc;
        --shop-white: #ffffff;
        --shop-gray: #f1f5f9;
        --shop-border: #e2e8f0;
        --shop-shadow: 0 4px 20px rgba(45, 90, 39, 0.08);
        --shop-shadow-hover: 0 8px 40px rgba(45, 90, 39, 0.15);
        --shop-radius: 16px;
        --shop-transition: all 0.3s ease-in-out;
    }

    body {
        font-family: 'Inter', sans-serif;
        background-color: var(--shop-light);
    }

    .product-card {
        border-radius: var(--shop-radius);
        box-shadow: var(--shop-shadow);
        transition: var(--shop-transition);
        background-color: var(--shop-white);
    }

        .product-card:hover {
            transform: scale(1.01);
            box-shadow: var(--shop-shadow-hover);
        }

    .btn-shop-primary {
        background-color: var(--shop-primary);
        color: var(--shop-white);
        border: none;
        border-radius: var(--shop-radius);
        box-shadow: var(--shop-shadow);
        transition: var(--shop-transition);
    }

        .btn-shop-primary:hover {
            background-color: var(--shop-secondary);
            box-shadow: var(--shop-shadow-hover);
        }

    .btn-shop-outline {
        background-color: transparent;
        color: var(--shop-primary);
        border: 2px solid var(--shop-primary);
        border-radius: var(--shop-radius);
        transition: var(--shop-transition);
    }

        .btn-shop-outline:hover {
            background-color: var(--shop-primary);
            color: var(--shop-white);
        }

    .card-img-top {
        border-top-left-radius: var(--shop-radius);
        border-top-right-radius: var(--shop-radius);
        object-fit: cover;
    }

    .card-footer {
        border-top: none;
    }
</style>

<main class="TruongSach-main-content">
    <div class="container mt-4">
        <div class="row mb-4">
            <div class="col-12">
                <h1 class="display-5 fw-bold text">
                    Tất cả sản phẩm
                </h1>
                <p class="text-muted">Tìm thấy @Model.Count() sản phẩm</p>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-3">
                @await Component.InvokeAsync("MenuLoai")
            </div>

            <div class="col-lg-9">
                <div class="row mb-3 align-items-center">
                    <div class="col-md-6">
                        <div class="d-flex align-items-center">
                            <label for="sort" class="form-label me-2 mb-0">Sắp xếp:</label>
                            <select class="form-select sort-dropdown" id="sort" name="sort" onchange="updateSort()">
                                <option value="name" selected="@(ViewBag.Sort == "name" ? "selected" : null)">Tên A-Z</option>
                                <option value="price_asc" selected="@(ViewBag.Sort == "price_asc" ? "selected" : null)">Giá thấp đến cao</option>
                                <option value="price_desc" selected="@(ViewBag.Sort == "price_desc" ? "selected" : null)">Giá cao đến thấp</option>
                                <option value="newest" selected="@(ViewBag.Sort == "newest" ? "selected" : null)">Mới nhất</option>
                                <option value="oldest" selected="@(ViewBag.Sort == "oldest" ? "selected" : null)">Cũ nhất</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="d-flex align-items-center justify-content-md-end">
                            <label for="per_page" class="form-label me-2 mb-0">Hiển thị:</label>
                            <select class="form-select" id="per_page" name="per_page" onchange="updatePerPage()" style="width: auto;">
                                <option value="12" selected="@(ViewBag.per_page == "12" ? "selected" : null)">12</option>
                                <option value="24" selected="@(ViewBag.per_page == "24" ? "selected" : null)">24</option>
                                <option value="48" selected="@(ViewBag.per_page == "48" ? "selected" : null)">48</option>
                            </select>
                            <span class="ms-2 text-muted">sản phẩm</span>
                        </div>
                    </div>
                </div>

                <div class="row product-grid">
                    @foreach (var item in Model)
                    {
                        <div class="col-lg-4 col-md-6 mb-4">
                            <div class="card product-card h-100 border-0">
                                <div class="position-relative">
                                    <img src="@item.HinhAnhDaiDien" class="card-img-top" alt="@item.TenSanPham"
                                         onerror="this.src='../assets/images/default-product.jpg'"
                                         style="height: 250px;">
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title">
                                        <a href="product_detail.php?id=1" class="text-decoration-none text-dark">
                                            @item.TenSanPham
                                        </a>
                                    </h5>
                                    <p class="card-text text-muted small">
                                        @item.MoTa
                                    </p>
                                    <p class="text-success fw-bold fs-5 mb-2">
                                        @item.GiaBan.ToString("N0") ₫
                                    </p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="text-muted">@item.TenLoaiSanPham</small>
                                        <small class="text-muted">Còn: @item.SoLuongTon</small>
                                    </div>
                                </div>
                                <div class="card-footer bg-transparent">
                                    <div class="d-flex gap-2">
                                        <a asp-action="Details" asp-route-id="@item.MaSanPham" class="btn btn-shop-outline">Chi tiết</a>
                                        <button class="btn btn-shop-primary btn-add-to-cart"
                                                data-id="@item.MaSanPham"
                                                data-ten="@item.TenSanPham"
                                                data-gia="@item.GiaBan"
                                                data-anh="@item.HinhAnhDaiDien">
                                            <i class="fas fa-cart-plus me-1"></i> Thêm vào giỏ
                                        </button>

                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <nav class="mt-4">
                    <ul class="pagination justify-content-center">
                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                        {
                            <li class="page-item @(i == ViewBag.Page ? "active" : "")">
                                <a class="page-link"
                                   href="?sort=@ViewBag.Sort&per_page=@ViewBag.PerPage&page=@i">@i</a>
                            </li>
                        }
                    </ul>
                </nav>
                <div class="modal fade" id="cartModal" tabindex="-1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Thêm vào giỏ hàng</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body text-center">
                                <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
                                <p>Sản phẩm đã được thêm vào giỏ hàng!</p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-shop-outline" data-bs-dismiss="modal">Tiếp tục mua</button>
                                <a asp-controller="GioHang" asp-action="Index" class="btn btn-shop-primary">Xem giỏ hàng</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <script>
        document.querySelectorAll(".btn-add-to-cart").forEach(btn => {
            btn.addEventListener("click", function () {
                const product = {
                    MaSanPham: this.dataset.id,
                    TenSanPham: this.dataset.ten,
                    GiaBan: parseFloat(this.dataset.gia),
                    HinhAnh : this.dataset.anh,
                    SoLuong: 1
                };

                fetch("/GioHang/ThemSanPham", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(product)
                })
                .then(res => {
                  if (res.ok) {
                        res.json().then(data => {
                            const modal = new bootstrap.Modal(document.getElementById('cartModal'));
                            modal.show();
                            // Cập nhật số lượng ở biểu tượng giỏ hàng
                            const badge = document.querySelector(".nav-item .badge");
                            if (badge && data.count !== undefined) {
                                badge.textContent = data.count;
                            }
                        });
                    }   else {
                        alert("Lỗi khi thêm vào giỏ hàng!");
                    }
                })
                .catch(err => console.error(err));
            });
         });
        function updateSort() {
            const sort = document.getElementById('sort').value;
            const urlParams = new URLSearchParams(window.location.search);
            urlParams.set('sort', sort);
            urlParams.delete('page'); // Reset to first page
            window.location.search = urlParams.toString();
        }

        function updatePerPage() {
            const perPage = document.getElementById('per_page').value;
            const urlParams = new URLSearchParams(window.location.search);
            urlParams.set('per_page', perPage);
            urlParams.delete('page'); // Reset to first page
            window.location.search = urlParams.toString();
        }


    </script>

</main>
